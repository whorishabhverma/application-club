Problem 1: Searching an element in a sorted array
link: https://practice.geeksforgeeks.org/problems/who-will-win-1587115621/1?utm_source=youtube&utm_medium=collab_striver_ytdescription
      &utm_campaign=who-will-win&fbclid=IwAR2YuBkuvJClJ26NOTNFS8LzN2G1APx4szh0L_00RwjNJJ_jEtgIJs533bk

Solution:  A)-
class Solution{
    public:
    int searchInSorted(int arr[], int N, int K) 
    { 
    
       // Your code here
       for(int i=0;i<N;i++){
           if(arr[i]==K)
           return 1;
       }
       return -1;
       
    }
};

solution: B)-
int searchInSorted(int arr[], int N, int K) 
   {
        int low=0,high=N-1;
         while(low<=high){
            int mid=(low+high)/2;
            if(arr[mid]<K)
                low=mid+1;
            else if(arr[mid]>K)
                high=mid-1;
            else
                return 1;
         }
        return -1;
    
    }


Problem 2: Missing Number
link: https://practice.geeksforgeeks.org/problems/missing-number4257/1?utm_source=youtube&utm_medium=collab_striver_ytdescription
      &utm_campaign=missing-number&fbclid=IwAR3fCLFTcQQlW1BZ74gMiE7MZT6_kFKGLFdBVlQRUBYoeygXVe3HKh8a6O4


solution:
int missingNumber(int A[], int N)
{
    int sum=0;
    for(int i=0;i<N-1;i++)
    {
        sum+=A[i];
    }
    int k=(N*(N+1))/2;
    return k-sum;
    
}

