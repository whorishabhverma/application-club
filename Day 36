Search insert position of K in a sorted array
int searchInsertK(vector<int>arr, int n, int k)
    {
        int start=0,end=n-1,ans = 0;
        int mid=start+(end-start)/2;
        while(start<=end){
            if(arr[mid] == k)
                return mid;
            else if(arr[mid]  > k )
                end=mid-1;
            else{
                start=mid+1;
                ans=mid+1;
            }
                
        mid=start+(end-start)/2;        
        }
        
        
        
        return ans;
    }
    
    
    
    
    2.  K-th element of two sorted Arrays
    
    
    int kthElement(int arr1[], int arr2[], int n, int m, int k)
    {
    vector<int> ans;
    // for(int i=0;i<n;i++)
    //     ans.push_back(arr1[i]);
    
    // for(int i=0;i<m;i++)
    //     ans.push_back(arr2[i]);
    
    // sort(ans.begin(),ans.end());
    // return ans[k-1];
    
    
    
    // int i=0,j=0;
    // while(i<n && j<m){
    //     if(arr1[i]<=arr2[j])
    //       {  ans.push_back(arr1[i]);
    //           i++;
    //       }
    //     else
    //       { ans.push_back(arr2[j]);
    //       j++;
               
    //       }
    // }
    // while(i<n)
    // {
    //     ans.push_back(arr1[i]);  i++;
    // }
    // while(j<m)
    // {
    // ans.push_back(arr2[j]); j++;
    // }
    // return ans[k-1]; 
    
    
   
    
    
    
    
    
     }  
